apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kube-cert-manager
  name: kube-cert-manager
  namespace: {{ .Values.deploymentNamespace }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kube-cert-manager
      name: kube-cert-manager
    spec:
      containers:
        - name: kube-cert-manager
          image: palmstonegames/kube-cert-manager:{{ .Chart.Version }}
          env:
          - name: CLOUDFLARE_EMAIL
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: cloudflare.email
          - name: CLOUDFLARE_API_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: cloudflare.api.key
          - name: DO_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: do.auth.token
          - name: DNSIMPLE_EMAIL
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: dnsimple.email
          - name: DNSIMPLE_API_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: dnsimple.api.key
          - name: DNSMADEEASY_API_SECRET
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: dnsmadeeasy.api.secret
          - name: DNSMADEEASY_SANDBOX
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: dnsmadeeasy.api.sandbox
          - name: DYN_CUSTOMER_NAME
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: dyn.customer.name
          - name: DYN_USER_NAME
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: dyn.user.name
          - name: DYN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: dyn.password
          - name: GANDI_API_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: gandi.api.key
          - name: GCE_PROJECT
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: gce.project
          # Todo: This should be a static path that's mounted into the container. Then, we can just mount an empty
          # JSON file there, unless the user overrides it with content.
          - name: GOOGLE_APPLICATION_CREDENTIALS
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: google.application.credentials
          - name: NAMECHEAP_API_USER
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: namecheap.api.user
          - name: NAMECHEAP_API_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: namecheap.api.key
          - name: OVH_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: ovh.endpoint
          - name: OVH_APPLICATION_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: ovh.application.key
          - name: OVH_APPLICATION_SECRET
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: ovh.application.secret
          - name: OVH_CONSUMER_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: ovh.consumer.key
          - name: PDNS_API_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: pdns.api.key
          - name: RFC2136_NAMESERVER
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: rfc2136.nameserver
          - name: RFC2136_TSIG_ALGORITHM
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: rfc2136.tsig.algorithm
          - name: RFC2136_TSIG_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: rfc2136.tsig.key
          - name: RFC2136_TSIG_SECRET
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: rfc2136.tsig.secret
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: aws.access.key.id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: aws.secret.access.key
          - name: VULTR_API_KEY
            valueFrom:
              secretKeyRef:
                name: kube-cert-manager-environment
                key: vultr.api.key
          args:
            - "-data-dir=/var/lib/cert-manager"
            - "-acme-url={{ .Values.acmeUrl }}"
          volumeMounts:
            - name: data
              mountPath: /var/lib/cert-manager
        - name: kubectl-proxy
          image: palmstonegames/kubectl-proxy:{{ .Values.kubectlVersion }}
      volumes:
        - name: "data"
          gcePersistentDisk:
            pdName: kube-cert-manager
            fsType: ext4
      ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https # Todo: Test if this works.
          containerPort: 8081
          protocol: TCP
